    "*.*":
      custom_ui_state_card: state-card-custom-ui
    binary_sensor.*water_leak*:
      templates:
        icon_color: >
          if (state == "off") {
            return 'rgb(22, 200, 38)';
          } else {
            return 'rgb(255, 22, 38)';
          }
        icon: >
          if (state == "off") {
            return "mdi:water-off";
          } else {
            return "mdi:alarm-light";
          }
    binary_sensor.*smoke*:
      templates:
        icon_color: >
          if (state == "off") {
            return 'rgb(22, 200, 38)';
          } else {
            return 'rgb(255, 22, 38)';
          }
        icon: >
          if (state == "off") {
            return "mdi:smoking-off";
          } else {
            return "mdi:alarm-light";
          }
    binary_sensor.door*_contact*:
      templates:
        icon_color: >
          if (state == "off") return 'rgb(53, 130, 181)';
          return 'rgb(234, 175, 37)';
        brightness2:  if (state == "off") return 71; return 92;
        icon: >
          if (state == "off") return "mdi:door-closed";
          return "mdi:door-open";
    binary_sensor.window*_contact*:
      templates:
        icon_color: >
          if (state == "off") return 'rgb(53, 130, 181)';
          return 'rgb(234, 175, 37)';
        brightness2:  if (state == "off") return 71; return 92;
        icon: >
          if (state == "off") return "mdi:window-closed-variant";
          return "mdi:window-open-variant";

    sensor.*_battery:
      templates:
        icon_color: >
          if (state > 66) {
            return 'rgb(22, 200, 38)';
          } else if (state > 33 ) {
            return 'rgb(255, 114, 0)';
          } else if (state > 0 ) {
            return 'rgb(255, 22, 38)';
          } else {
            return 'rgb(128, 0, 59)';
          }
        icon: >
          if (state > 40) {
            return "mdi:battery-80";
          } else if (state > 20 ) {
            return "mdi:battery-40";
          } else if (state > 0 ) {
            return "mdi:battery-alert";
          } else {
            return "mdi:battery-unknown";
          }

    binary_sensor.*_battery_low:
      templates:
        icon_color: >
          if (state == "off") {
            return 'rgb(22, 200, 38)';
          } else {
            return 'rgb(255, 22, 38)';
          }
        icon: >
          if (state == "off") {
            return "mdi:battery-80";
          } else  {
            return "mdi:battery-alert";
          }

    binary_sensor.*_battery_critical:
      templates:
        icon_color: >
          if (state == "off") {
            return 'rgb(22, 200, 38)';
          } else {
            return 'rgb(255, 22, 38)';
          }
        icon: >
          if (state == "off") {
            return "mdi:battery-80";
          } else  {
            return "mdi:battery-alert";
          }

    input_boolean.*_active:
      templates:
        icon_color: >
          if (state == "on") {
            return 'rgb(22, 200, 38)';
          } else {
            return 'rgb(255, 22, 38)';
          }
        icon: >
          if (state == "on") {
            return 'mdi:check-circle';
          } else {
            return 'mdi:close-circle';
          }

    binary_sensor.*_enabled:
      templates:
        icon_color: >
          if (state == "on") {
            return 'rgb(22, 200, 38)';
          } else {
            return 'rgb(255, 22, 38)';
          }

    binary_sensor.*_status:
      templates:
        icon_color: >
          if (state == "on") {
            return 'rgb(22, 200, 38)';
          } else {
            return 'rgb(255, 22, 38)';
          }

    binary_sensor.*_door_sensor:
      templates:
        icon_color: >
          if (state == "on") {
            return 'rgb(244, 67, 54)';
          } else {
            return 'rgb(76, 175, 80)';
          }
